{"version":3,"sources":["webpack:///src/app/notificaciones/notificaciones.page.html","webpack:///src/app/notificaciones/notificaciones-routing.module.ts","webpack:///src/app/notificaciones/notificaciones.module.ts","webpack:///src/app/notificaciones/notificaciones.page.scss","webpack:///src/app/notificaciones/notificaciones.page.ts"],"names":["routes","path","component","NotificacionesPageRoutingModule","imports","forChild","exports","NotificacionesPageModule","declarations","NotificacionesPage","App","alertController","router","listNotificaciones","id_User","getNotificaciones","self","data","url","done","notificacion","error","notificaciones","i","length","imagen","alertNotificacion","mensaje","msg","create","header","message","buttons","alert","present","id_notificacion","type","success","index","text","handler","remover","id_notificacion_participante","titulo","descripcion","selector","template"],"mappings":"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","file":"notificaciones-notificaciones-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"toolhead\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Notificaciones</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-list lines=\\\"full\\\">\\r\\n    <button style=\\\"width: 100%;\\\">\\r\\n      <ion-item (click)=\\\"alertDetalle(i)\\\" *ngFor=\\\"let list of listNotificaciones;let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <ion-img [src]=\\\"list.imagen\\\"></ion-img>\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <h3>{{list.titulo}}</h3>\\r\\n          <p>{{list.descripcion}}</p>\\r\\n          <p>{{list.fecha}}</p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n    </button>\\r\\n  </ion-list>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotificacionesPage } from './notificaciones.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificacionesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificacionesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificacionesPageRoutingModule } from './notificaciones-routing.module';\r\n\r\nimport { NotificacionesPage } from './notificaciones.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NotificacionesPageRoutingModule\r\n  ],\r\n  declarations: [NotificacionesPage]\r\n})\r\nexport class NotificacionesPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhY2lvbmVzL25vdGlmaWNhY2lvbmVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\nimport { AppComponent } from '../app.component';\r\nimport * as $ from \"jquery\";\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-notificaciones',\r\n  templateUrl: './notificaciones.page.html',\r\n  styleUrls: ['./notificaciones.page.scss'],\r\n})\r\nexport class NotificacionesPage{\r\n\r\n  private listNotificaciones = []\r\n  constructor(private App: AppComponent, private alertController: AlertController, private router: Router) { }\r\n\r\n\r\n  ionViewDidEnter() {\r\n    this.listNotificaciones = []\r\n    if (this.App.id_User != null) {\r\n      this.getNotificaciones();\r\n    }\r\n  }\r\n\r\n  async getNotificaciones() {\r\n    var self = this;\r\n    var data = {\r\n      \"id\": this.App.id_User\r\n    }\r\n    await $.post(environment.url + \"/api/notificaciones_participante/\", data).done(function (notificacion) {\r\n      if (!notificacion.error) {\r\n        self.listNotificaciones = notificacion.notificaciones\r\n        for (let i = 0; i < self.listNotificaciones.length; i++) {\r\n          self.listNotificaciones[i].imagen = environment.url + self.listNotificaciones[i].imagen\r\n        }\r\n      }\r\n      else {\r\n        self.alertNotificacion('Sin Notificaciones', notificacion.mensaje)\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  async alertNotificacion(msg: string, mensaje: string) {\r\n    const alert = await this.alertController.create({\r\n      header: msg,\r\n      message: mensaje,\r\n      buttons: ['OK']\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  remover(id_notificacion) {\r\n    var self=this;\r\n    let data = {\r\n      \"id_notificacion_participante\": id_notificacion,\r\n      \"estado\":false\r\n    }\r\n\r\n    $.ajax({\r\n      url: environment.url + \"/api/actualizar_notificacion/\",\r\n      data: data,\r\n      type: 'PATCH',\r\n      success: function (notificacion) {\r\n        if (!notificacion.error) {\r\n          self.alertNotificacion(\"NotificaciÃ³n eliminada\", notificacion.mensaje)\r\n        }\r\n        else {\r\n          self.alertNotificacion(\"Error\", notificacion.mensaje)\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  async alertDetalle(index) {\r\n    const alert = await this.alertController.create({\r\n      buttons: [{ text: 'Remover', handler: () => { this.remover(this.listNotificaciones[index].id_notificacion_participante) } }, { text: 'Cerrar' }],\r\n      message: `\r\n    <img src=\"${this.listNotificaciones[index].imagen}\" style=\"width:80%; height:80%; border-radius: 2px\">\r\n    <ion-item>\r\n      <ion-text> <b>${this.listNotificaciones[index].titulo} </b> </ion-text>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-text> ${this.listNotificaciones[index].descripcion} </ion-text>\r\n    </ion-item>`,\r\n\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n\r\n}\r\n"]}