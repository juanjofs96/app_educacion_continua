{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","router","platform","google","loadingController","fireAuth","create","message","loading","present","is","params","loginGoogleWeb","login","then","response","idToken","accessToken","onLoginSuccess","error","console","log","alert","JSON","stringify","auth","signInWithPopup","GoogleAuthProvider","res","user","accessSecret","credential","signInWithCredential","navigate","dismiss","err","selector","template"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-content>\\n  <div class=\\\"vertical-center\\\">\\n    <img src=\\\"assets/images/LogoCEC.png\\\" class=\\\"smallLogo\\\" />\\n  </div>\\n  <ion-text color=\\\"primary\\\" class=\\\"color-h3\\\">\\n    <h3>Iniciar Sesión</h3>\\n  </ion-text>\\n  <form>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Correo electrónico</ion-label>\\n        <ion-input autocomplete=\\\"on\\\" type=\\\"email\\\"><ion-icon name=\\\"mail-outline\\\"></ion-icon></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Contraseña</ion-label>\\n        <ion-input autocomplete=\\\"off\\\" type=\\\"password\\\"><ion-icon name=\\\"finger-print-outline\\\"></ion-icon></ion-input>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"none\\\">\\n        <a routerLink=\\\"/signup\\\">Recuperar contraseña</a>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" color=\\\"primary\\\" class=\\\"ion-padding-horizontal\\\" routerLink=\\\"/educ/home\\\">Iniciar Sesión</ion-button>\\n  </form>\\n\\n  <!--header class=\\\"ion-padding-start ion-padding-top\\\"></!--header-->\\n  <ion-button expand=\\\"block\\\" color=\\\"tertiary\\\" class=\\\"ion-padding-horizontal\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"logo-facebook\\\"></ion-icon>\\n    Iniciar Sesión con Facebook\\n  </ion-button>\\n\\n  <ion-button expand=\\\"block\\\" color=\\\"danger\\\" (click)=\\\"login()\\\" class=\\\"ion-padding-horizontal\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"logo-google\\\"></ion-icon>\\n    Iniciar Sesión con Google\\n  </ion-button>\\n\\n  <section>\\n    <header class=\\\"ion-padding-start ion-padding-top\\\">¿Eres nuevo?</header>\\n    <ion-button expand=\\\"block\\\" color=\\\"primary\\\" class=\\\"ion-padding-horizontal\\\" routerLink=\\\"/signup\\\">\\n      Crear nueva cuenta</ion-button>\\n  </section>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-content {\\n  --ion-background-color: #ECECEC;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksK0JBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjRUNFQ0VDO1xuICB9XG5cbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\nimport { Platform } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loading: any;\n  constructor(\n    private router: Router,\n    private platform: Platform,\n    private google:GooglePlus,\n    public loadingController: LoadingController,\n    private fireAuth: AngularFireAuth\n  ) {\n\n  }\n\n  async ngOnInit() {\n    this.loading = await this.loadingController.create({\n      message: 'Connecting ...'\n    });\n  }\n\n\n  async presentLoading(loading) {\n    await loading.present();\n  }\n\n\n  async login() {\n    let params;\n    if (this.platform.is('android')) {\n      params = {\n        'webClientId': '44397923925-udqfaidjvqhp8p7ule0oihpn4i3co6je.apps.googleusercontent.com',\n        'offline': true\n      }\n    }\n    else {\n      params = {}\n      this.loginGoogleWeb();\n      \n    }\n    this.google.login(params)\n      .then((response) => {\n        const { idToken, accessToken } = response\n        this.onLoginSuccess(idToken, accessToken);\n      }).catch((error) => {\n        console.log(error)\n        alert('error:' + JSON.stringify(error))\n      });\n  }\n  async loginGoogleWeb() {\n    const res = await this.fireAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    const user = res.user;\n    console.log(user);\n  }\n\n  onLoginSuccess(accessToken, accessSecret) {\n    const credential = accessSecret ? firebase.auth.GoogleAuthProvider\n        .credential(accessToken, accessSecret) : firebase.auth.GoogleAuthProvider\n            .credential(accessToken);\n    this.fireAuth.auth.signInWithCredential(credential)\n      .then((response) => {\n        this.router.navigate([\"/profile\"]);\n        this.loading.dismiss();\n      })\n\n  }\n  onLoginError(err) {\n    console.log(err);\n  }\n}\n\n"]}